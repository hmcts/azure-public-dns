# Docs:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master
    
resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts (1)'

variables:
  terraformVersion: 0.14.6
  agentPool: 'ubuntu-18.04'

stages:
  - stage: Plan_phase
    displayName: "Terraform Plan"
    jobs:
      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'sandbox'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'demo'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}


          
      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'dev'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          
      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'ithc'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'test'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'staging'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'nle'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'prod'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

      - job: Archive
        pool:
          vmImage: ${{ variables.agentPool }}
        steps:
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'

  - stage: Sandbox_Apply
    dependsOn: Plan_phase
    displayName: "Sandbox Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'sandbox'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Demo_Apply
    dependsOn: Plan_phase
    displayName: "Demo Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'demo'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Dev_Apply
    dependsOn: Plan_phase
    displayName: "Dev Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'dev'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Ithc_Apply
    dependsOn: Plan_phase
    displayName: "Ithc Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'ithc'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Test_Apply
    dependsOn: Plan_phase
    displayName: "Test Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'test'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Staging_Apply
    dependsOn: Plan_phase
    displayName: "Staging Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'staging'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Nle_Apply
    dependsOn: Plan_phase
    displayName: "Nle Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'nle'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}

  - stage: Prod_Apply
    dependsOn: Plan_phase
    displayName: "Prod Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'prod'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
