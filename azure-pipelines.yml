# Docs:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master
    
resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: 'ubuntu-latest'
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: CFT
  - name: project
    value: AzureDNS
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

  - name: environment_components
    type: object
    default:
      - deployment: 'Sandbox'
        environment: 'sandbox'
        component: 'sandbox'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'Demo'
        environment: 'demo'
        component: 'demo'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'Dev'
        environment: 'dev'
        component: 'dev'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'Ithc'
        environment: 'ithc'
        component: 'ithc'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'Test'
        environment: 'test'
        component: 'test'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'Staging'
        environment: 'staging'
        component: 'staging'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'nle'
        environment: 'nle'
        component: 'nle'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck
      - deployment: 'Prod'
        environment: 'prod'
        component: 'prod'
        resource_group_name: 'azure-control-mgmt-rg'
        serviceConnection: 'Reform-CFT-Mgmt'
        dependsOn:
          - Precheck

stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'azurerm-sandbox'
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each deployment in parameters.environment_components }}:
      - stage: ${{ deployment.deployment }}
        dependsOn: ${{ deployment.dependsOn }}
        jobs:
          - job: TerraformPlanApply
            pool:
              vmImage: ${{ variables.agentPool }}
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}
            steps:
              - template: steps/terraform.yaml@cnp-azuredevops-libraries
                parameters:
                  overrideAction: ${{ parameters.overrideAction }}
                  environment: ${{ deployment.environment }}
                  component: ${{ deployment.component }}
                  serviceConnection: ${{ deployment.serviceConnection }}
                  terraformInitSubscription: ${{ variables.terraformInitSubscription }}
                  product: ${{ variables.product }}
                  initCommandOptions: >
                    -backend-config resource_group_name=${{ deployment.resource_group_name }}
                  planCommandOptions: >
                    -lock=false
